{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-tabs */\n'use strict';\n\nfunction convertToNumber(text) {\n  return +(text.replace('$', '').replaceAll(',', ''));\n}\n\nconst tableHead = document.querySelector('thead');\n\nconst table = document.querySelector('table');\n\nconst tableBody = document.querySelector('tbody');\n\nlet allRows = document.querySelectorAll('tr');\n\nlet employees = [...allRows].splice(1);\n\nemployees.pop();\n\nconst notification = document.createElement('div');\n\nlet title;\nlet description;\n\nnotification.dataset.qa = 'notification';\nnotification.classList.add('notification');\n\nfunction errorNotification(data = 'Data') {\n  title = 'Error!';\n  description = `${data} is invalid`;\n\n  notification.innerHTML = `\n    <h2>${title}</h2>\n    <p>${description}</p>\n    `;\n\n  notification.classList.add('error');\n  notification.classList.remove('success');\n  table.after(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\nfunction successNotification() {\n  title = 'Success!';\n  description = 'Data is valid';\n\n  notification.innerHTML = `\n    <h2>${title}</h2>\n    <p>${description}</p>\n  `;\n\n  notification.classList.add('success');\n  notification.classList.remove('error');\n  table.after(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\nfunction cellValidation(currentCellInput, currentElement, currentText) {\n  let newText = currentCellInput.value;\n\n  if (!newText) {\n    currentCellInput.remove();\n    currentElement.innerText = currentText;\n\n    return;\n  }\n\n  if (isNaN(convertToNumber(currentText))\n    && !isNaN(convertToNumber(newText))) {\n    errorNotification();\n    currentElement.innerText = currentText;\n\n    return;\n  }\n\n  if (!isNaN(convertToNumber(currentText))\n    && isNaN(convertToNumber(newText))) {\n    errorNotification();\n    currentElement.innerText = currentText;\n\n    return;\n  }\n\n  if (!currentText.includes('$') && !isNaN(convertToNumber(currentText))\n    && ((convertToNumber(newText)) < minAge\n      || convertToNumber(newText) > maxAge)) {\n    errorNotification();\n    currentElement.innerText = currentText;\n\n    return;\n  }\n\n  if (currentText.includes('$') && !isNaN(convertToNumber(currentText))\n    && convertToNumber(newText) <= 0) {\n    errorNotification('Salary');\n    currentElement.innerText = currentText;\n\n    return;\n  }\n\n  if (currentText.includes('$') && !newText.includes('$')) {\n    newText = `$${newText}`;\n  }\n\n  currentCellInput.remove();\n  currentElement.innerText = newText;\n}\n\nfunction updateEmployeesList() {\n  allRows = document.querySelectorAll('tr');\n  employees = [...allRows].splice(1);\n  employees.pop();\n}\n\nfunction selectEmployee() {\n  employees.forEach(element => {\n    element.addEventListener('click', () => {\n      const activeElement = document.querySelector('.active');\n\n      if (activeElement) {\n        activeElement.classList.remove('active');\n      }\n      element.classList.add('active');\n    });\n  });\n}\n\nconst minNameLength = 4;\nconst minAge = 18;\nconst maxAge = 90;\n\nfunction addAbilityToEdit() {\n  const tableCells = document.querySelectorAll('td');\n\n  [...tableCells].forEach(element => {\n    let initialText;\n\n    element.addEventListener('dblclick', () => {\n      const cellInput = document.createElement('input');\n\n      initialText = element.innerText;\n\n      element.innerText = '';\n      element.append(cellInput);\n      cellInput.classList.add('cell-input');\n      cellInput.value = initialText;\n      cellInput.focus();\n    });\n\n    element.addEventListener('focusout', () => {\n      const cellInput = document.querySelector('.cell-input');\n\n      cellValidation(cellInput, element, initialText);\n    });\n\n    element.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        const cellInput = document.querySelector('.cell-input');\n\n        cellValidation(cellInput, element, initialText);\n      }\n    });\n  });\n}\n\nconst form = document.createElement('form');\n\nform.innerHTML = `\n  <form>\n      <label>Name:\n        <input\n          name=\"name\"\n          type=\"text\"\n          data-qa=\"name\"\n          required\n        >\n      </label>\n      <label>Position:\n        <input\n          name=\"position\"\n          type=\"text\"\n          data-qa=\"position\"\n          required\n        >\n      </label>\n      <label>Office:\n        <select\n          data-qa=\"office\"\n          name=\"city\"\n          required\n        >\n          <option>Tokyo</option>\n          <option value=\"singapore\">Singapore</option>\n          <option value=\"london\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n      <label>Age:\n        <input\n          name=\"age\"\n          type=\"number\"\n          data-qa=\"age\"\n          required\n        >\n      </label>\n      <label>Salary:\n        <input\n          name=\"salary\"\n          type=\"number\"\n          data-qa=\"salary\"\n          required\n        >\n      </label>\n      <button type=\"submit\">Save to table</button>\n    </form>\n`;\n\ntable.after(form);\n\nform.classList.add('new-employee-form');\n\nconst saveButton = document.querySelector('button');\n\nsaveButton.addEventListener('submit', (e) => {\n  e.preventDefault();\n});\n\nsaveButton.addEventListener('click', (e) => {\n  const newRow = document.createElement('tr');\n\n  const employeeName = form.children[0].firstElementChild.value;\n  const position = form.children[1].firstElementChild.value;\n  const office = form.children[2].firstElementChild.value;\n  const age = +form.children[3].firstElementChild.value;\n  const salary = +form.children[4].firstElementChild.value;\n\n  newRow.innerHTML = `\n    <tr>\n      <td>${employeeName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${salary.toLocaleString('en-US')}</td>\n    </tr>\n  `;\n\n  if (employeeName.length < minNameLength || !isNaN(+employeeName)) {\n    e.preventDefault();\n    errorNotification('Name');\n\n    return;\n  }\n\n  if (age < minAge || age > maxAge) {\n    e.preventDefault();\n    errorNotification('Age');\n\n    return;\n  }\n\n  if (salary <= 0) {\n    e.preventDefault();\n    errorNotification('Salary');\n\n    return;\n  }\n\n  if (!isNaN(+position)) {\n    e.preventDefault('Position');\n    errorNotification();\n\n    return;\n  }\n\n  successNotification();\n  tableBody.append(newRow);\n  form.reset();\n\n  addAbilityToEdit();\n  updateEmployeesList();\n  selectEmployee();\n});\n\nlet salaryClicked = false;\nlet ageClicked = false;\nlet officeClicked = false;\nlet positionClicked = false;\nlet nameClicked = false;\n\ntableHead.addEventListener('click', e => {\n  switch (e.target.innerText) {\n    case 'Salary':\n      switch (salaryClicked) {\n        case false:\n          employees.sort((employee1, employee2) => {\n            return convertToNumber(employee1.children[4].innerText)\n              > convertToNumber(employee2.children[4]\n                .innerText) ? 1 : -1;\n          });\n\n          salaryClicked = true;\n          break;\n\n        case true:\n          employees.sort((employee1, employee2) => {\n            return convertToNumber(employee1.children[4].innerText)\n              < convertToNumber(employee2.children[4]\n                .innerText) ? 1 : -1;\n          });\n\n          salaryClicked = false;\n          break;\n      }\n\n      break;\n\n    case 'Age':\n      switch (ageClicked) {\n        case false:\n          employees.sort((employee1, employee2) => {\n            return +employee1.children[3].innerText\n              > +employee2.children[3].innerText ? 1 : -1;\n          });\n\n          ageClicked = true;\n          break;\n\n        case true:\n          employees.sort((employee1, employee2) => {\n            return +employee1.children[3].innerText\n              < +employee2.children[3].innerText ? 1 : -1;\n          });\n\n          ageClicked = false;\n          break;\n      }\n\n      break;\n\n    case 'Office':\n      switch (officeClicked) {\n        case false:\n          employees.sort((employee1, employee2) => {\n            return employee1.children[2].innerText\n              .localeCompare(employee2.children[2].innerText);\n          });\n\n          officeClicked = true;\n          break;\n\n        case true:\n          employees.sort((employee1, employee2) => {\n            return -employee1.children[2].innerText\n              .localeCompare(employee2.children[2].innerText);\n          });\n\n          officeClicked = false;\n          break;\n      }\n      break;\n\n    case 'Position':\n      switch (positionClicked) {\n        case false:\n          employees.sort((employee1, employee2) => {\n            return employee1.children[1].innerText\n              .localeCompare(employee2.children[1].innerText);\n          });\n\n          positionClicked = true;\n          break;\n\n        case true:\n          employees.sort((employee1, employee2) => {\n            return employee2.children[1].innerText\n              .localeCompare(employee1.children[1].innerText);\n          });\n\n          positionClicked = false;\n          break;\n      }\n      break;\n\n    case 'Name':\n      switch (nameClicked) {\n        case false:\n          employees.sort((employee1, employee2) => {\n            return employee1.children[0].innerText\n              .localeCompare(employee2.children[0].innerText);\n          });\n\n          nameClicked = true;\n          break;\n\n        case true:\n          employees.sort((employee1, employee2) => {\n            return -employee1.children[0].innerText\n              .localeCompare(employee2.children[0].innerText);\n          });\n\n          nameClicked = false;\n          break;\n      }\n      break;\n  }\n\n  tableBody.innerHTML = `\n      ${employees.map(element => `\n        <tr>\n          <td>${element.children[0].innerText}</td>\n          <td>${element.children[1].innerText}</td>\n          <td>${element.children[2].innerText}</td>\n          <td>${element.children[3].innerText}</td>\n          <td>${element.children[4].innerText}</td>\n        </tr>\n      `).join('')}\n    `;\n\n  updateEmployeesList();\n  selectEmployee();\n  addAbilityToEdit();\n});\n\nselectEmployee();\naddAbilityToEdit();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}